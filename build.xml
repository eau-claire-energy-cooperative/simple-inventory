<?xml version="1.0" encoding="UTF-8"?>
<project name="Simple Inventory Builder" default="how_to" basedir=".">
  <property name="jar.manifest" value="jars/conductor_framework.jar jars/cron4j-2.2.3.jar jars/jdom.jar jars/mysqlconnect.jar jars/utils.jar jars/xml-apis.jar jars/jcifs-1.3.17.jar jars/log4j-1.2.16.jar jars/mail.jar jars/json-simple-1.1.1.jar sigar-bin/lib/sigar.jar"/>
  <property name="dir.updater" value="updater" />
  <property name="dir.www" value="www" />
  <property name="dir.build" value="../build" />
  
  <path id="jar.classpath">
    <fileset dir="${dir.updater}/jars">
      <include name="*.jar" />
    </fileset>

    <fileset dir="${dir.updater}/sigar-bin/lib">
      <include name="sigar.jar" />
    </fileset>
  </path>

  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="/usr/share/java/ant-contrib.jar" />
    </classpath>
  </taskdef>

  <target name="how_to" description="Echo Usage Instructions">
	<echo message="Run with target create_batch_file, update_site, or update_program" />
  </target>

  <target name="update_site" description="Updates Website Data" depends="build_temp">
    <property name="dest_dir" value="/home/inventory/www" />
    <echo message="Updating site in directory ${dest_dir}" />

    <if>
      <available file="${dest_dir}" type="dir" />
      <then>
        <!-- copy any existing config files -->
	<copy file="${dest_dir}/app/Config/database.php" tofile="${dir.build}/www_config/database.php" failonerror="false" overwrite="true"/>

	<move tofile="${dir.build}/www_config/drivers" file="${dest_dir}/app/webroot/drivers" />

	<!-- delete all files in the original directory -->
	<delete includeemptydirs="true">
	  <fileset dir="${dest_dir}" includes="**/*" />
	</delete>

	<!-- copy the www source tree to this location and set file permissions -->
	<copy todir="${dest_dir}">
	  <fileset dir="${dir.www}" />
	</copy>

	<chmod dir="${dest_dir}/" perm="777" excludes="${dest_dir}/app/webroot/drivers/*.zip" type="both" />
	<chmod dir="${dest_dir}/lib/Cake/Console" perm="+x" includes="cake" type="file" />
	<chmod dir="${dest_dir}/app/Console" perm="+x" includes="cake" type="file" />

	<!-- copy the config file back -->
	<copy file="${dir.build}/www_config/database.php" tofile="${dest_dir}/app/Config/database.php" failonerror="false" overwrite="true" />

	<move tofile="${dest_dir}/app/webroot/drivers" file="${dir.build}/www_config/drivers" />
	
      </then>
      <else>
        <echo message="Destination does not exist or is not a directory" />
      </else>
    </if>
        
  </target>

  <target name="update_program" description="Update Inventory program">
    <!-- create the jar file -->
    <antcall target="makejar" />

    <!-- get the location of the updater folder -->
    <property name="dest_dir" value="/home/inventory/updater" />
    <if>
       <available file="${dest_dir}" type="dir" />
       <then>
	 <!-- copy the inventory.jar file -->
	 <copy file="${dir.build}/inventory.jar" tofile="${dest_dir}/inventory.jar" overwrite="true" failonerror="true" />

         <!-- delete the jar files and copy the ones from the source dir -->
	 <delete>
	   <fileset dir="${dest_dir}/jars/" includes="**/*" />
	 </delete>

	 <copy todir="${dest_dir}/jars/">
	   <fileset dir="${dir.updater}/jars/" />
  	 </copy>
	 
		<!-- delete the scripts install directory and copy the ones from source -->
		<delete>
			<fileset dir="${dest_dir}/scripts/" includes="**/*" />
		</delete>
		
		<copy todir="${dest_dir}/scripts/">
			<fileset dir="${dir.updater}/scripts/" />
		</copy>
       </then>
       <else>
          <echo message="Destination does not exist or is not a directory" />
       </else>
    </if>
  </target>

  <target name="create_batch_file" description="Creates the batch file for the login script">
    <!-- get the location of the updater directory -->
    <property name="dest_dir" value="/home/inventory/updater" />

    <if>
      <available file="${dest_dir}" type="dir" />
      <then>
        <!-- check if a run.bat file already exists -->
	<if>
	  <available file="${dest_dir}/run.bat" type="file"/>
	  <then>
	    <echo message="run.bat file already exists, please delete before running this" />
	  </then>
	  <else>
	    <!-- create the file and write the contents to it -->
	    <hostinfo />
	    <touch file="${dest_dir}/run.bat" />
	    <echo file="${dest_dir}/run.bat" message="@echo off ${line.separator}" append="true" />
	    <echo file="${dest_dir}/run.bat" message="set INVENTORY_PATH=\\${ADDR4}\inventory\updater${line.separator}" append="true" />
	    <concat destfile="${dest_dir}/run.bat" append="true" binary="yes">
	      <filelist dir="${dir.updater}/scripts/" files="run.bat" />
	    </concat>
	  </else>
	</if>
      </then>
      <else>
        <echo message="Destination does not exist or is not a directory" />
      </else> 
    </if>
  </target>

  <target name="makejar" description="Build Inventory Jar File" depends="build_temp">
    
    <javac verbose="false" srcdir="${dir.updater}/src" destdir="${dir.build}/bin" fork="yes" includeantruntime="false">
        <classpath refid="jar.classpath" />
    </javac>
    <jar jarfile="${dir.build}/inventory.jar" basedir="${dir.build}/bin" >
    <manifest>
    		<attribute name="Main-Class" value="com.ecec.rweber.inventory.Main" />
    		<attribute name="Class-Path" value="${jar.manifest}" />
    	</manifest>
    </jar>
  </target>

  <target name="build_temp" description="Build temp structure">
    <mkdir dir="${dir.build}" />
    <mkdir dir="${dir.build}/bin" />
    <mkdir dir="${dir.build}/www_config" />
  </target>

  <target name="clean" description="Clean Build Directory">
    <delete dir="${dir.build}" />
  </target>
  
</project>
